
ULTRASONIC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001e  00800100  00000c0e  00000ca2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c0e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080011e  0080011e  00000cc0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000cc0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d1c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d0  00000000  00000000  00000d5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000112e  00000000  00000000  00000e2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000bd6  00000000  00000000  00001f5a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000778  00000000  00000000  00002b30  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000198  00000000  00000000  000032a8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000595  00000000  00000000  00003440  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000552  00000000  00000000  000039d5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a0  00000000  00000000  00003f27  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ee e0       	ldi	r30, 0x0E	; 14
  a0:	fc e0       	ldi	r31, 0x0C	; 12
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ae 31       	cpi	r26, 0x1E	; 30
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	ae e1       	ldi	r26, 0x1E	; 30
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a4 32       	cpi	r26, 0x24	; 36
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	4c d0       	rcall	.+152    	; 0x15c <main>
  c4:	a2 c5       	rjmp	.+2884   	; 0xc0a <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <timerInit>:
#include "us_lcd.h"

FILE OUTPUT = FDEV_SETUP_STREAM(UART0_Transmit, NULL,_FDEV_SETUP_WRITE);
void timerInit()	
{
	TCCR1B |= (1<<CS12) | (1<<CS10); //16비트 타이머 1번, 분주비 1024설정.
  c8:	8e b5       	in	r24, 0x2e	; 46
  ca:	85 60       	ori	r24, 0x05	; 5
  cc:	8e bd       	out	0x2e, r24	; 46
  ce:	08 95       	ret

000000d0 <triggerPin>:
}
void triggerPin()
{
	PORTD &= ~(1<<PORTD1);
  d0:	82 b3       	in	r24, 0x12	; 18
  d2:	8d 7f       	andi	r24, 0xFD	; 253
  d4:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  d6:	85 e0       	ldi	r24, 0x05	; 5
  d8:	8a 95       	dec	r24
  da:	f1 f7       	brne	.-4      	; 0xd8 <triggerPin+0x8>
  dc:	00 00       	nop
	_delay_us(1);
	PORTD |= (1<<PORTD1);
  de:	82 b3       	in	r24, 0x12	; 18
  e0:	82 60       	ori	r24, 0x02	; 2
  e2:	82 bb       	out	0x12, r24	; 18
  e4:	85 e3       	ldi	r24, 0x35	; 53
  e6:	8a 95       	dec	r24
  e8:	f1 f7       	brne	.-4      	; 0xe6 <triggerPin+0x16>
  ea:	00 00       	nop
	_delay_us(10);
	PORTD &= ~(1<<PORTD1);
  ec:	82 b3       	in	r24, 0x12	; 18
  ee:	8d 7f       	andi	r24, 0xFD	; 253
  f0:	82 bb       	out	0x12, r24	; 18
  f2:	08 95       	ret

000000f4 <meanDistance>:
}
uint8_t meanDistance()
{
	TCNT1 = 0;
  f4:	1d bc       	out	0x2d, r1	; 45
  f6:	1c bc       	out	0x2c, r1	; 44
	while(!(PIND & 0x01))	//echo핀이 high가 될 때 까지 대기
  f8:	05 c0       	rjmp	.+10     	; 0x104 <meanDistance+0x10>
	{
		if(TCNT1 > 65000)
  fa:	8c b5       	in	r24, 0x2c	; 44
  fc:	9d b5       	in	r25, 0x2d	; 45
  fe:	89 3e       	cpi	r24, 0xE9	; 233
 100:	9d 4f       	sbci	r25, 0xFD	; 253
 102:	58 f5       	brcc	.+86     	; 0x15a <meanDistance+0x66>
	PORTD &= ~(1<<PORTD1);
}
uint8_t meanDistance()
{
	TCNT1 = 0;
	while(!(PIND & 0x01))	//echo핀이 high가 될 때 까지 대기
 104:	80 9b       	sbis	0x10, 0	; 16
 106:	f9 cf       	rjmp	.-14     	; 0xfa <meanDistance+0x6>
		if(TCNT1 > 65000)
		{
			return;
		}
	}
	TCNT1 = 0;
 108:	1d bc       	out	0x2d, r1	; 45
 10a:	1c bc       	out	0x2c, r1	; 44
	while(PIND & 0x01)		//echo핀이 low가 될 때 까지 대기
 10c:	08 c0       	rjmp	.+16     	; 0x11e <meanDistance+0x2a>
	{
		if(TCNT1 > 65000)
 10e:	8c b5       	in	r24, 0x2c	; 44
 110:	9d b5       	in	r25, 0x2d	; 45
 112:	89 3e       	cpi	r24, 0xE9	; 233
 114:	9d 4f       	sbci	r25, 0xFD	; 253
 116:	18 f0       	brcs	.+6      	; 0x11e <meanDistance+0x2a>
		{
			TCNT1 = 0;
 118:	1d bc       	out	0x2d, r1	; 45
 11a:	1c bc       	out	0x2c, r1	; 44
			break;
 11c:	02 c0       	rjmp	.+4      	; 0x122 <meanDistance+0x2e>
		{
			return;
		}
	}
	TCNT1 = 0;
	while(PIND & 0x01)		//echo핀이 low가 될 때 까지 대기
 11e:	80 99       	sbic	0x10, 0	; 16
 120:	f6 cf       	rjmp	.-20     	; 0x10e <meanDistance+0x1a>
		{
			TCNT1 = 0;
			break;
		}
	}
	double pulseWidth = 1000000.0 * TCNT1 * 1024 / 16000000;	//TCNT1의 값이 us단위,  거리 = 시간 * 속도(속도 : 340m/sec) 
 122:	6c b5       	in	r22, 0x2c	; 44
 124:	7d b5       	in	r23, 0x2d	; 45
 126:	80 e0       	ldi	r24, 0x00	; 0
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	a3 d1       	rcall	.+838    	; 0x472 <__floatunsisf>
 12c:	20 e0       	ldi	r18, 0x00	; 0
 12e:	34 e2       	ldi	r19, 0x24	; 36
 130:	44 e7       	ldi	r20, 0x74	; 116
 132:	59 e4       	ldi	r21, 0x49	; 73
 134:	2c d2       	rcall	.+1112   	; 0x58e <__mulsf3>
 136:	20 e0       	ldi	r18, 0x00	; 0
 138:	30 e0       	ldi	r19, 0x00	; 0
 13a:	40 e8       	ldi	r20, 0x80	; 128
 13c:	54 e4       	ldi	r21, 0x44	; 68
 13e:	27 d2       	rcall	.+1102   	; 0x58e <__mulsf3>
 140:	20 e0       	ldi	r18, 0x00	; 0
 142:	34 e2       	ldi	r19, 0x24	; 36
 144:	44 e7       	ldi	r20, 0x74	; 116
 146:	5b e4       	ldi	r21, 0x4B	; 75
 148:	00 d1       	rcall	.+512    	; 0x34a <__divsf3>
																//1024 / 16000000는 분주.
	return pulseWidth / 58;
 14a:	20 e0       	ldi	r18, 0x00	; 0
 14c:	30 e0       	ldi	r19, 0x00	; 0
 14e:	48 e6       	ldi	r20, 0x68	; 104
 150:	52 e4       	ldi	r21, 0x42	; 66
 152:	fb d0       	rcall	.+502    	; 0x34a <__divsf3>
 154:	62 d1       	rcall	.+708    	; 0x41a <__fixunssfsi>
 156:	86 2f       	mov	r24, r22
 158:	08 95       	ret
}
 15a:	08 95       	ret

0000015c <main>:
int main(void)
{
 15c:	cf 93       	push	r28
 15e:	df 93       	push	r29
 160:	cd b7       	in	r28, 0x3d	; 61
 162:	de b7       	in	r29, 0x3e	; 62
 164:	6e 97       	sbiw	r28, 0x1e	; 30
 166:	0f b6       	in	r0, 0x3f	; 63
 168:	f8 94       	cli
 16a:	de bf       	out	0x3e, r29	; 62
 16c:	0f be       	out	0x3f, r0	; 63
 16e:	cd bf       	out	0x3d, r28	; 61
	
	uint8_t buff[30];
	uint8_t distance;
	stdout = &OUTPUT;
 170:	80 e0       	ldi	r24, 0x00	; 0
 172:	91 e0       	ldi	r25, 0x01	; 1
 174:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <__data_end+0x3>
 178:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__data_end+0x2>
	LCD_Init();
 17c:	98 d0       	rcall	.+304    	; 0x2ae <LCD_Init>
	UART0_Init();
 17e:	cb d0       	rcall	.+406    	; 0x316 <UART0_Init>
 180:	78 94       	sei
	sei();
 182:	81 b3       	in	r24, 0x11	; 17
	
	DDRD |= 0x02;
 184:	82 60       	ori	r24, 0x02	; 2
 186:	81 bb       	out	0x11, r24	; 17
 188:	81 b3       	in	r24, 0x11	; 17
	DDRD &= 0xfe;
 18a:	8e 7f       	andi	r24, 0xFE	; 254
 18c:	81 bb       	out	0x11, r24	; 17
	timerInit();
 18e:	9c df       	rcall	.-200    	; 0xc8 <timerInit>
	
    while (1) 
    {
		triggerPin();
 190:	9f df       	rcall	.-194    	; 0xd0 <triggerPin>
 192:	b0 df       	rcall	.-160    	; 0xf4 <meanDistance>
		distance = meanDistance();
 194:	1f 92       	push	r1
 196:	8f 93       	push	r24
		sprintf(buff, "%-3dCm", distance);
 198:	8e e0       	ldi	r24, 0x0E	; 14
 19a:	91 e0       	ldi	r25, 0x01	; 1
 19c:	9f 93       	push	r25
 19e:	8f 93       	push	r24
 1a0:	8e 01       	movw	r16, r28
 1a2:	0f 5f       	subi	r16, 0xFF	; 255
 1a4:	1f 4f       	sbci	r17, 0xFF	; 255
 1a6:	1f 93       	push	r17
 1a8:	0f 93       	push	r16
 1aa:	54 d2       	rcall	.+1192   	; 0x654 <sprintf>
 1ac:	45 e1       	ldi	r20, 0x15	; 21
		LCD_WriteStringXY(0,0,"Distance");
 1ae:	51 e0       	ldi	r21, 0x01	; 1
 1b0:	60 e0       	ldi	r22, 0x00	; 0
 1b2:	80 e0       	ldi	r24, 0x00	; 0
 1b4:	73 d0       	rcall	.+230    	; 0x29c <LCD_WriteStringXY>
 1b6:	a8 01       	movw	r20, r16
		LCD_WriteStringXY(1,0,buff);
 1b8:	60 e0       	ldi	r22, 0x00	; 0
 1ba:	81 e0       	ldi	r24, 0x01	; 1
 1bc:	6f d0       	rcall	.+222    	; 0x29c <LCD_WriteStringXY>
 1be:	2f ef       	ldi	r18, 0xFF	; 255
 1c0:	83 ed       	ldi	r24, 0xD3	; 211
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1c2:	90 e3       	ldi	r25, 0x30	; 48
 1c4:	21 50       	subi	r18, 0x01	; 1
 1c6:	80 40       	sbci	r24, 0x00	; 0
 1c8:	90 40       	sbci	r25, 0x00	; 0
 1ca:	e1 f7       	brne	.-8      	; 0x1c4 <main+0x68>
 1cc:	00 c0       	rjmp	.+0      	; 0x1ce <main+0x72>
 1ce:	00 00       	nop
 1d0:	0f 90       	pop	r0
 1d2:	0f 90       	pop	r0
 1d4:	0f 90       	pop	r0
 1d6:	0f 90       	pop	r0
 1d8:	0f 90       	pop	r0
 1da:	0f 90       	pop	r0
 1dc:	d9 cf       	rjmp	.-78     	; 0x190 <main+0x34>

000001de <LCD_WritePin>:
 1de:	83 b1       	in	r24, 0x03	; 3
 1e0:	8f 7b       	andi	r24, 0xBF	; 191
	LCD_RW_PORT &= ~(1<<LCD_RW);	// RW 핀을 LOW로 설정하여 쓰기 모드로 설정
}

void LCD_ReadPin()
{
	LCD_RW_PORT |= (1<<LCD_RW);		// RW 핀을 HIGH로 설정하여 읽기 모드로 설정
 1e2:	83 b9       	out	0x03, r24	; 3
 1e4:	08 95       	ret

000001e6 <LCD_EnablePin>:
}

void LCD_EnablePin()
{
	LCD_E_PORT &= ~(1<<LCD_E);	// E 핀을 LOW로 설정
 1e6:	83 b1       	in	r24, 0x03	; 3
 1e8:	8f 77       	andi	r24, 0x7F	; 127
 1ea:	83 b9       	out	0x03, r24	; 3
	LCD_E_PORT |= (1<<LCD_E);	// E 핀을 HIGH로 설정하여 동작 신호 전송
 1ec:	83 b1       	in	r24, 0x03	; 3
 1ee:	80 68       	ori	r24, 0x80	; 128
 1f0:	83 b9       	out	0x03, r24	; 3
	LCD_E_PORT &= ~(1<<LCD_E);	// E 핀을 다시 LOW로 설정
 1f2:	83 b1       	in	r24, 0x03	; 3
 1f4:	8f 77       	andi	r24, 0x7F	; 127
 1f6:	83 b9       	out	0x03, r24	; 3
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1f8:	8f ef       	ldi	r24, 0xFF	; 255
 1fa:	98 e1       	ldi	r25, 0x18	; 24
 1fc:	01 97       	sbiw	r24, 0x01	; 1
 1fe:	f1 f7       	brne	.-4      	; 0x1fc <LCD_EnablePin+0x16>
 200:	00 c0       	rjmp	.+0      	; 0x202 <LCD_EnablePin+0x1c>
 202:	00 00       	nop
 204:	08 95       	ret

00000206 <LCD_Data4bit>:
//void LCD_Data(uint8_t data)
//{
//LCD_DATA_PORT = data; // 데이터 핀에 데이터 출력
//}
void LCD_Data4bit(uint8_t data)
{
 206:	1f 93       	push	r17
 208:	cf 93       	push	r28
 20a:	df 93       	push	r29
 20c:	18 2f       	mov	r17, r24
	LCD_DATA_PORT = (LCD_DATA_PORT & 0x0f) | (data & 0xf0);			// 상위 4비트 출력
 20e:	c2 e6       	ldi	r28, 0x62	; 98
 210:	d0 e0       	ldi	r29, 0x00	; 0
 212:	88 81       	ld	r24, Y
 214:	8f 70       	andi	r24, 0x0F	; 15
 216:	91 2f       	mov	r25, r17
 218:	90 7f       	andi	r25, 0xF0	; 240
 21a:	89 2b       	or	r24, r25
 21c:	88 83       	st	Y, r24
	LCD_EnablePin();												// LCD 동작 신호 전송
 21e:	e3 df       	rcall	.-58     	; 0x1e6 <LCD_EnablePin>
	LCD_DATA_PORT = (LCD_DATA_PORT & 0x0f) | ((data & 0x0f) << 4);	// 하위 4비트 출력
 220:	28 81       	ld	r18, Y
 222:	30 e1       	ldi	r19, 0x10	; 16
 224:	13 9f       	mul	r17, r19
 226:	c0 01       	movw	r24, r0
 228:	11 24       	eor	r1, r1
 22a:	92 2f       	mov	r25, r18
 22c:	9f 70       	andi	r25, 0x0F	; 15
 22e:	89 2b       	or	r24, r25
	LCD_EnablePin();												// LCD 동작 신호 전송
 230:	88 83       	st	Y, r24
 232:	d9 df       	rcall	.-78     	; 0x1e6 <LCD_EnablePin>
}
 234:	df 91       	pop	r29
 236:	cf 91       	pop	r28
 238:	1f 91       	pop	r17
 23a:	08 95       	ret

0000023c <LCD_WriteCommand>:
	LCD_E_PORT &= ~(1<<LCD_E);	// E 핀을 다시 LOW로 설정
	_delay_us(1600);			// 일정 시간동안 대기 (1600이상)
}

void LCD_WriteCommand(uint8_t commandData)
{
 23c:	cf 93       	push	r28
 23e:	c8 2f       	mov	r28, r24
	LCD_RS_PORT &= ~(1<<LCD_RS);	// RS 핀을 LOW로 설정하여 명령어 모드로 설정
 240:	83 b1       	in	r24, 0x03	; 3
 242:	8f 7d       	andi	r24, 0xDF	; 223
 244:	83 b9       	out	0x03, r24	; 3
	LCD_WritePin();					// 데이터 쓰기 함수 호출
 246:	cb df       	rcall	.-106    	; 0x1de <LCD_WritePin>
	LCD_Data4bit(commandData);			// 명령어 데이터를 데이터 핀에 출력
 248:	8c 2f       	mov	r24, r28
 24a:	dd df       	rcall	.-70     	; 0x206 <LCD_Data4bit>
	//LCD_EnablePin();				// LCD 동작 신호 전송
}
 24c:	cf 91       	pop	r28
 24e:	08 95       	ret

00000250 <LCD_WriteData>:

void LCD_WriteData(uint8_t charData)
{
 250:	cf 93       	push	r28
 252:	c8 2f       	mov	r28, r24
	LCD_RS_PORT |= (1<<LCD_RS);		// RS 핀을 HIGH로 설정하여 문자 데이터 모드로 설정
 254:	83 b1       	in	r24, 0x03	; 3
 256:	80 62       	ori	r24, 0x20	; 32
 258:	83 b9       	out	0x03, r24	; 3
	LCD_WritePin();					// 데이터 쓰기 함수 호출
 25a:	c1 df       	rcall	.-126    	; 0x1de <LCD_WritePin>
	LCD_Data4bit(charData);				// 문자 데이터를 데이터 핀에 출력
 25c:	8c 2f       	mov	r24, r28
 25e:	d3 df       	rcall	.-90     	; 0x206 <LCD_Data4bit>
	//LCD_EnablePin();				// LCD 동작 신호 전송
}
 260:	cf 91       	pop	r28
 262:	08 95       	ret

00000264 <LCD_GotoXY>:

void LCD_GotoXY(uint8_t row, uint8_t col)
{
	col %= 16;		// 열 인덱스를 0부터 15까지로 제한 (16개의 열)
 264:	6f 70       	andi	r22, 0x0F	; 15
	row %= 2;		// 행 인덱스를 0 또는 1로 제한 (2개의 행)
 266:	81 70       	andi	r24, 0x01	; 1

	uint8_t address = (0x40 * row) + col;		// 주소 계산
 268:	90 e4       	ldi	r25, 0x40	; 64
 26a:	89 9f       	mul	r24, r25
 26c:	60 0d       	add	r22, r0
 26e:	11 24       	eor	r1, r1
 270:	86 2f       	mov	r24, r22
	uint8_t command = 0x80 + address;			// 커맨드 값 계산 (주소 설정)
	LCD_WriteCommand(command);					// 주소 설정 커맨드를 LCD에 전송
 272:	80 58       	subi	r24, 0x80	; 128
 274:	e3 cf       	rjmp	.-58     	; 0x23c <LCD_WriteCommand>
 276:	08 95       	ret

00000278 <LCD_WriteString>:
}

void LCD_WriteString(char *string)
{
 278:	0f 93       	push	r16
 27a:	1f 93       	push	r17
 27c:	cf 93       	push	r28
 27e:	8c 01       	movw	r16, r24
	for (uint8_t i=0; string[i]; i++)
 280:	c0 e0       	ldi	r28, 0x00	; 0
 282:	02 c0       	rjmp	.+4      	; 0x288 <LCD_WriteString+0x10>
	{
		LCD_WriteData(string[i]);		// 문자열의 각 문자를 LCD에 출력
 284:	e5 df       	rcall	.-54     	; 0x250 <LCD_WriteData>
	LCD_WriteCommand(command);					// 주소 설정 커맨드를 LCD에 전송
}

void LCD_WriteString(char *string)
{
	for (uint8_t i=0; string[i]; i++)
 286:	cf 5f       	subi	r28, 0xFF	; 255
 288:	f8 01       	movw	r30, r16
 28a:	ec 0f       	add	r30, r28
 28c:	f1 1d       	adc	r31, r1
 28e:	80 81       	ld	r24, Z
 290:	81 11       	cpse	r24, r1
 292:	f8 cf       	rjmp	.-16     	; 0x284 <LCD_WriteString+0xc>
	{
		LCD_WriteData(string[i]);		// 문자열의 각 문자를 LCD에 출력
	}
}
 294:	cf 91       	pop	r28
 296:	1f 91       	pop	r17
 298:	0f 91       	pop	r16
 29a:	08 95       	ret

0000029c <LCD_WriteStringXY>:

void LCD_WriteStringXY(uint8_t row, uint8_t col, char *string)
{
 29c:	cf 93       	push	r28
 29e:	df 93       	push	r29
 2a0:	ea 01       	movw	r28, r20
	LCD_GotoXY(row, col);		// 지정된 위치로 커서 이동
 2a2:	e0 df       	rcall	.-64     	; 0x264 <LCD_GotoXY>
	LCD_WriteString(string);	// 문자열을 해당 위치부터 LCD에 출력
 2a4:	ce 01       	movw	r24, r28
 2a6:	e8 df       	rcall	.-48     	; 0x278 <LCD_WriteString>
}
 2a8:	df 91       	pop	r29
 2aa:	cf 91       	pop	r28
 2ac:	08 95       	ret

000002ae <LCD_Init>:

void LCD_Init()
{
	LCD_DATA_DDR = 0xff;			// 데이터 핀을 출력으로 설정
 2ae:	8f ef       	ldi	r24, 0xFF	; 255
 2b0:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
	LCD_RS_DDR |= (1<<LCD_RS);		// RS 핀을 출력으로 설정
 2b4:	82 b1       	in	r24, 0x02	; 2
 2b6:	80 62       	ori	r24, 0x20	; 32
 2b8:	82 b9       	out	0x02, r24	; 2
	LCD_RW_DDR |= (1<<LCD_RW);		// RW 핀을 출력으로 설정
 2ba:	82 b1       	in	r24, 0x02	; 2
 2bc:	80 64       	ori	r24, 0x40	; 64
 2be:	82 b9       	out	0x02, r24	; 2
	LCD_E_DDR |= (1<<LCD_E);		// E 핀을 출력으로 설정
 2c0:	82 b1       	in	r24, 0x02	; 2
 2c2:	80 68       	ori	r24, 0x80	; 128
 2c4:	82 b9       	out	0x02, r24	; 2
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2c6:	2f ef       	ldi	r18, 0xFF	; 255
 2c8:	89 ef       	ldi	r24, 0xF9	; 249
 2ca:	90 e0       	ldi	r25, 0x00	; 0
 2cc:	21 50       	subi	r18, 0x01	; 1
 2ce:	80 40       	sbci	r24, 0x00	; 0
 2d0:	90 40       	sbci	r25, 0x00	; 0
 2d2:	e1 f7       	brne	.-8      	; 0x2cc <LCD_Init+0x1e>
 2d4:	00 c0       	rjmp	.+0      	; 0x2d6 <LCD_Init+0x28>
 2d6:	00 00       	nop

	_delay_ms(20);								// 초기화 대기 시간 (충분한 대기 시간 필요)
	LCD_WriteCommand(0x03);						// 4비트 모드 설정
 2d8:	83 e0       	ldi	r24, 0x03	; 3
 2da:	b0 df       	rcall	.-160    	; 0x23c <LCD_WriteCommand>
 2dc:	8f e1       	ldi	r24, 0x1F	; 31
 2de:	9e e4       	ldi	r25, 0x4E	; 78
 2e0:	01 97       	sbiw	r24, 0x01	; 1
 2e2:	f1 f7       	brne	.-4      	; 0x2e0 <LCD_Init+0x32>
 2e4:	00 c0       	rjmp	.+0      	; 0x2e6 <LCD_Init+0x38>
 2e6:	00 00       	nop
	_delay_ms(5);								// 초기화 대기 시간
	LCD_WriteCommand(0x03);						// 4비트 모드 설정
 2e8:	83 e0       	ldi	r24, 0x03	; 3
 2ea:	a8 df       	rcall	.-176    	; 0x23c <LCD_WriteCommand>
 2ec:	8f e1       	ldi	r24, 0x1F	; 31
 2ee:	9e e4       	ldi	r25, 0x4E	; 78
 2f0:	01 97       	sbiw	r24, 0x01	; 1
 2f2:	f1 f7       	brne	.-4      	; 0x2f0 <LCD_Init+0x42>
 2f4:	00 c0       	rjmp	.+0      	; 0x2f6 <LCD_Init+0x48>
	_delay_ms(5);								// 초기화 대기 시간
	LCD_WriteCommand(0x03);						// 4비트 모드 설정
 2f6:	00 00       	nop
 2f8:	83 e0       	ldi	r24, 0x03	; 3
	
	LCD_WriteCommand(0x02);						// 4비트 모드 설정
 2fa:	a0 df       	rcall	.-192    	; 0x23c <LCD_WriteCommand>
 2fc:	82 e0       	ldi	r24, 0x02	; 2
	LCD_WriteCommand(COMMAND_4_BIT_MODE);						// 4비트 모드 설정
 2fe:	9e df       	rcall	.-196    	; 0x23c <LCD_WriteCommand>
 300:	88 e2       	ldi	r24, 0x28	; 40
	
	LCD_WriteCommand(COMMAND_DISPLAY_OFF);		// 화면 OFF
 302:	9c df       	rcall	.-200    	; 0x23c <LCD_WriteCommand>
 304:	88 e0       	ldi	r24, 0x08	; 8
	LCD_WriteCommand(COMMAND_DISPLAY_CLEAR);	// 화면 지우기
 306:	9a df       	rcall	.-204    	; 0x23c <LCD_WriteCommand>
 308:	81 e0       	ldi	r24, 0x01	; 1
 30a:	98 df       	rcall	.-208    	; 0x23c <LCD_WriteCommand>
	LCD_WriteCommand(COMMAND_DISPLAY_ON);		// 화면 ON
 30c:	8c e0       	ldi	r24, 0x0C	; 12
 30e:	96 df       	rcall	.-212    	; 0x23c <LCD_WriteCommand>
 310:	86 e0       	ldi	r24, 0x06	; 6
	LCD_WriteCommand(COMMAND_ENTRY_MODE);		// 입력 모드 설정
 312:	94 cf       	rjmp	.-216    	; 0x23c <LCD_WriteCommand>
 314:	08 95       	ret

00000316 <UART0_Init>:
//9600 BPS설정
//2배속 모드
//비동기, 8비트 데이터, 패리티비트 X , 스탑비트 1bit
void UART0_Init()
{
	UBRR0H = 0;
 316:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	UBRR0L = 207;			//9600bps
 31a:	8f ec       	ldi	r24, 0xCF	; 207
 31c:	89 b9       	out	0x09, r24	; 9
	
	//UCSRnC 레지스터 초기화 : 0000 0110
	UCSR0A |= (1<<U2X0);	//2배속
 31e:	8b b1       	in	r24, 0x0b	; 11
 320:	82 60       	ori	r24, 0x02	; 2
 322:	8b b9       	out	0x0b, r24	; 11
	UCSR0C |= 0x06;			//비동기, 8비트 데이터, 패리티비트 X , 스탑비트 1bit
 324:	e5 e9       	ldi	r30, 0x95	; 149
 326:	f0 e0       	ldi	r31, 0x00	; 0
 328:	80 81       	ld	r24, Z
 32a:	86 60       	ori	r24, 0x06	; 6
 32c:	80 83       	st	Z, r24
	
	UCSR0B |= (1<<RXEN0);	//수신가능
 32e:	8a b1       	in	r24, 0x0a	; 10
 330:	80 61       	ori	r24, 0x10	; 16
 332:	8a b9       	out	0x0a, r24	; 10
	UCSR0B |= (1<<TXEN0);	//송신가능
 334:	8a b1       	in	r24, 0x0a	; 10
 336:	88 60       	ori	r24, 0x08	; 8
 338:	8a b9       	out	0x0a, r24	; 10
	
	UCSR0B |= (1<<RXCIE0);	//수신 인터럽트 활성화
 33a:	8a b1       	in	r24, 0x0a	; 10
 33c:	80 68       	ori	r24, 0x80	; 128
 33e:	8a b9       	out	0x0a, r24	; 10
 340:	08 95       	ret

00000342 <UART0_Transmit>:
	
}
void UART0_Transmit(char data)
{
	while(!(UCSR0A &(1<<UDRE0))); //송신가능 하냐고 물음 UDRn레지스터가 비어있는지 확인.
 342:	5d 9b       	sbis	0x0b, 5	; 11
 344:	fe cf       	rjmp	.-4      	; 0x342 <UART0_Transmit>
	UDR0 = data;
 346:	8c b9       	out	0x0c, r24	; 12
 348:	08 95       	ret

0000034a <__divsf3>:
 34a:	0c d0       	rcall	.+24     	; 0x364 <__divsf3x>
 34c:	e6 c0       	rjmp	.+460    	; 0x51a <__fp_round>
 34e:	de d0       	rcall	.+444    	; 0x50c <__fp_pscB>
 350:	40 f0       	brcs	.+16     	; 0x362 <__divsf3+0x18>
 352:	d5 d0       	rcall	.+426    	; 0x4fe <__fp_pscA>
 354:	30 f0       	brcs	.+12     	; 0x362 <__divsf3+0x18>
 356:	21 f4       	brne	.+8      	; 0x360 <__divsf3+0x16>
 358:	5f 3f       	cpi	r21, 0xFF	; 255
 35a:	19 f0       	breq	.+6      	; 0x362 <__divsf3+0x18>
 35c:	c7 c0       	rjmp	.+398    	; 0x4ec <__fp_inf>
 35e:	51 11       	cpse	r21, r1
 360:	10 c1       	rjmp	.+544    	; 0x582 <__fp_szero>
 362:	ca c0       	rjmp	.+404    	; 0x4f8 <__fp_nan>

00000364 <__divsf3x>:
 364:	eb d0       	rcall	.+470    	; 0x53c <__fp_split3>
 366:	98 f3       	brcs	.-26     	; 0x34e <__divsf3+0x4>

00000368 <__divsf3_pse>:
 368:	99 23       	and	r25, r25
 36a:	c9 f3       	breq	.-14     	; 0x35e <__divsf3+0x14>
 36c:	55 23       	and	r21, r21
 36e:	b1 f3       	breq	.-20     	; 0x35c <__divsf3+0x12>
 370:	95 1b       	sub	r25, r21
 372:	55 0b       	sbc	r21, r21
 374:	bb 27       	eor	r27, r27
 376:	aa 27       	eor	r26, r26
 378:	62 17       	cp	r22, r18
 37a:	73 07       	cpc	r23, r19
 37c:	84 07       	cpc	r24, r20
 37e:	38 f0       	brcs	.+14     	; 0x38e <__divsf3_pse+0x26>
 380:	9f 5f       	subi	r25, 0xFF	; 255
 382:	5f 4f       	sbci	r21, 0xFF	; 255
 384:	22 0f       	add	r18, r18
 386:	33 1f       	adc	r19, r19
 388:	44 1f       	adc	r20, r20
 38a:	aa 1f       	adc	r26, r26
 38c:	a9 f3       	breq	.-22     	; 0x378 <__divsf3_pse+0x10>
 38e:	33 d0       	rcall	.+102    	; 0x3f6 <__divsf3_pse+0x8e>
 390:	0e 2e       	mov	r0, r30
 392:	3a f0       	brmi	.+14     	; 0x3a2 <__divsf3_pse+0x3a>
 394:	e0 e8       	ldi	r30, 0x80	; 128
 396:	30 d0       	rcall	.+96     	; 0x3f8 <__divsf3_pse+0x90>
 398:	91 50       	subi	r25, 0x01	; 1
 39a:	50 40       	sbci	r21, 0x00	; 0
 39c:	e6 95       	lsr	r30
 39e:	00 1c       	adc	r0, r0
 3a0:	ca f7       	brpl	.-14     	; 0x394 <__divsf3_pse+0x2c>
 3a2:	29 d0       	rcall	.+82     	; 0x3f6 <__divsf3_pse+0x8e>
 3a4:	fe 2f       	mov	r31, r30
 3a6:	27 d0       	rcall	.+78     	; 0x3f6 <__divsf3_pse+0x8e>
 3a8:	66 0f       	add	r22, r22
 3aa:	77 1f       	adc	r23, r23
 3ac:	88 1f       	adc	r24, r24
 3ae:	bb 1f       	adc	r27, r27
 3b0:	26 17       	cp	r18, r22
 3b2:	37 07       	cpc	r19, r23
 3b4:	48 07       	cpc	r20, r24
 3b6:	ab 07       	cpc	r26, r27
 3b8:	b0 e8       	ldi	r27, 0x80	; 128
 3ba:	09 f0       	breq	.+2      	; 0x3be <__divsf3_pse+0x56>
 3bc:	bb 0b       	sbc	r27, r27
 3be:	80 2d       	mov	r24, r0
 3c0:	bf 01       	movw	r22, r30
 3c2:	ff 27       	eor	r31, r31
 3c4:	93 58       	subi	r25, 0x83	; 131
 3c6:	5f 4f       	sbci	r21, 0xFF	; 255
 3c8:	2a f0       	brmi	.+10     	; 0x3d4 <__divsf3_pse+0x6c>
 3ca:	9e 3f       	cpi	r25, 0xFE	; 254
 3cc:	51 05       	cpc	r21, r1
 3ce:	68 f0       	brcs	.+26     	; 0x3ea <__divsf3_pse+0x82>
 3d0:	8d c0       	rjmp	.+282    	; 0x4ec <__fp_inf>
 3d2:	d7 c0       	rjmp	.+430    	; 0x582 <__fp_szero>
 3d4:	5f 3f       	cpi	r21, 0xFF	; 255
 3d6:	ec f3       	brlt	.-6      	; 0x3d2 <__divsf3_pse+0x6a>
 3d8:	98 3e       	cpi	r25, 0xE8	; 232
 3da:	dc f3       	brlt	.-10     	; 0x3d2 <__divsf3_pse+0x6a>
 3dc:	86 95       	lsr	r24
 3de:	77 95       	ror	r23
 3e0:	67 95       	ror	r22
 3e2:	b7 95       	ror	r27
 3e4:	f7 95       	ror	r31
 3e6:	9f 5f       	subi	r25, 0xFF	; 255
 3e8:	c9 f7       	brne	.-14     	; 0x3dc <__divsf3_pse+0x74>
 3ea:	88 0f       	add	r24, r24
 3ec:	91 1d       	adc	r25, r1
 3ee:	96 95       	lsr	r25
 3f0:	87 95       	ror	r24
 3f2:	97 f9       	bld	r25, 7
 3f4:	08 95       	ret
 3f6:	e1 e0       	ldi	r30, 0x01	; 1
 3f8:	66 0f       	add	r22, r22
 3fa:	77 1f       	adc	r23, r23
 3fc:	88 1f       	adc	r24, r24
 3fe:	bb 1f       	adc	r27, r27
 400:	62 17       	cp	r22, r18
 402:	73 07       	cpc	r23, r19
 404:	84 07       	cpc	r24, r20
 406:	ba 07       	cpc	r27, r26
 408:	20 f0       	brcs	.+8      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 40a:	62 1b       	sub	r22, r18
 40c:	73 0b       	sbc	r23, r19
 40e:	84 0b       	sbc	r24, r20
 410:	ba 0b       	sbc	r27, r26
 412:	ee 1f       	adc	r30, r30
 414:	88 f7       	brcc	.-30     	; 0x3f8 <__divsf3_pse+0x90>
 416:	e0 95       	com	r30
 418:	08 95       	ret

0000041a <__fixunssfsi>:
 41a:	98 d0       	rcall	.+304    	; 0x54c <__fp_splitA>
 41c:	88 f0       	brcs	.+34     	; 0x440 <__fixunssfsi+0x26>
 41e:	9f 57       	subi	r25, 0x7F	; 127
 420:	90 f0       	brcs	.+36     	; 0x446 <__fixunssfsi+0x2c>
 422:	b9 2f       	mov	r27, r25
 424:	99 27       	eor	r25, r25
 426:	b7 51       	subi	r27, 0x17	; 23
 428:	a0 f0       	brcs	.+40     	; 0x452 <__fixunssfsi+0x38>
 42a:	d1 f0       	breq	.+52     	; 0x460 <__fixunssfsi+0x46>
 42c:	66 0f       	add	r22, r22
 42e:	77 1f       	adc	r23, r23
 430:	88 1f       	adc	r24, r24
 432:	99 1f       	adc	r25, r25
 434:	1a f0       	brmi	.+6      	; 0x43c <__fixunssfsi+0x22>
 436:	ba 95       	dec	r27
 438:	c9 f7       	brne	.-14     	; 0x42c <__fixunssfsi+0x12>
 43a:	12 c0       	rjmp	.+36     	; 0x460 <__fixunssfsi+0x46>
 43c:	b1 30       	cpi	r27, 0x01	; 1
 43e:	81 f0       	breq	.+32     	; 0x460 <__fixunssfsi+0x46>
 440:	9f d0       	rcall	.+318    	; 0x580 <__fp_zero>
 442:	b1 e0       	ldi	r27, 0x01	; 1
 444:	08 95       	ret
 446:	9c c0       	rjmp	.+312    	; 0x580 <__fp_zero>
 448:	67 2f       	mov	r22, r23
 44a:	78 2f       	mov	r23, r24
 44c:	88 27       	eor	r24, r24
 44e:	b8 5f       	subi	r27, 0xF8	; 248
 450:	39 f0       	breq	.+14     	; 0x460 <__fixunssfsi+0x46>
 452:	b9 3f       	cpi	r27, 0xF9	; 249
 454:	cc f3       	brlt	.-14     	; 0x448 <__fixunssfsi+0x2e>
 456:	86 95       	lsr	r24
 458:	77 95       	ror	r23
 45a:	67 95       	ror	r22
 45c:	b3 95       	inc	r27
 45e:	d9 f7       	brne	.-10     	; 0x456 <__fixunssfsi+0x3c>
 460:	3e f4       	brtc	.+14     	; 0x470 <__fixunssfsi+0x56>
 462:	90 95       	com	r25
 464:	80 95       	com	r24
 466:	70 95       	com	r23
 468:	61 95       	neg	r22
 46a:	7f 4f       	sbci	r23, 0xFF	; 255
 46c:	8f 4f       	sbci	r24, 0xFF	; 255
 46e:	9f 4f       	sbci	r25, 0xFF	; 255
 470:	08 95       	ret

00000472 <__floatunsisf>:
 472:	e8 94       	clt
 474:	09 c0       	rjmp	.+18     	; 0x488 <__floatsisf+0x12>

00000476 <__floatsisf>:
 476:	97 fb       	bst	r25, 7
 478:	3e f4       	brtc	.+14     	; 0x488 <__floatsisf+0x12>
 47a:	90 95       	com	r25
 47c:	80 95       	com	r24
 47e:	70 95       	com	r23
 480:	61 95       	neg	r22
 482:	7f 4f       	sbci	r23, 0xFF	; 255
 484:	8f 4f       	sbci	r24, 0xFF	; 255
 486:	9f 4f       	sbci	r25, 0xFF	; 255
 488:	99 23       	and	r25, r25
 48a:	a9 f0       	breq	.+42     	; 0x4b6 <__floatsisf+0x40>
 48c:	f9 2f       	mov	r31, r25
 48e:	96 e9       	ldi	r25, 0x96	; 150
 490:	bb 27       	eor	r27, r27
 492:	93 95       	inc	r25
 494:	f6 95       	lsr	r31
 496:	87 95       	ror	r24
 498:	77 95       	ror	r23
 49a:	67 95       	ror	r22
 49c:	b7 95       	ror	r27
 49e:	f1 11       	cpse	r31, r1
 4a0:	f8 cf       	rjmp	.-16     	; 0x492 <__floatsisf+0x1c>
 4a2:	fa f4       	brpl	.+62     	; 0x4e2 <__floatsisf+0x6c>
 4a4:	bb 0f       	add	r27, r27
 4a6:	11 f4       	brne	.+4      	; 0x4ac <__floatsisf+0x36>
 4a8:	60 ff       	sbrs	r22, 0
 4aa:	1b c0       	rjmp	.+54     	; 0x4e2 <__floatsisf+0x6c>
 4ac:	6f 5f       	subi	r22, 0xFF	; 255
 4ae:	7f 4f       	sbci	r23, 0xFF	; 255
 4b0:	8f 4f       	sbci	r24, 0xFF	; 255
 4b2:	9f 4f       	sbci	r25, 0xFF	; 255
 4b4:	16 c0       	rjmp	.+44     	; 0x4e2 <__floatsisf+0x6c>
 4b6:	88 23       	and	r24, r24
 4b8:	11 f0       	breq	.+4      	; 0x4be <__floatsisf+0x48>
 4ba:	96 e9       	ldi	r25, 0x96	; 150
 4bc:	11 c0       	rjmp	.+34     	; 0x4e0 <__floatsisf+0x6a>
 4be:	77 23       	and	r23, r23
 4c0:	21 f0       	breq	.+8      	; 0x4ca <__floatsisf+0x54>
 4c2:	9e e8       	ldi	r25, 0x8E	; 142
 4c4:	87 2f       	mov	r24, r23
 4c6:	76 2f       	mov	r23, r22
 4c8:	05 c0       	rjmp	.+10     	; 0x4d4 <__floatsisf+0x5e>
 4ca:	66 23       	and	r22, r22
 4cc:	71 f0       	breq	.+28     	; 0x4ea <__floatsisf+0x74>
 4ce:	96 e8       	ldi	r25, 0x86	; 134
 4d0:	86 2f       	mov	r24, r22
 4d2:	70 e0       	ldi	r23, 0x00	; 0
 4d4:	60 e0       	ldi	r22, 0x00	; 0
 4d6:	2a f0       	brmi	.+10     	; 0x4e2 <__floatsisf+0x6c>
 4d8:	9a 95       	dec	r25
 4da:	66 0f       	add	r22, r22
 4dc:	77 1f       	adc	r23, r23
 4de:	88 1f       	adc	r24, r24
 4e0:	da f7       	brpl	.-10     	; 0x4d8 <__floatsisf+0x62>
 4e2:	88 0f       	add	r24, r24
 4e4:	96 95       	lsr	r25
 4e6:	87 95       	ror	r24
 4e8:	97 f9       	bld	r25, 7
 4ea:	08 95       	ret

000004ec <__fp_inf>:
 4ec:	97 f9       	bld	r25, 7
 4ee:	9f 67       	ori	r25, 0x7F	; 127
 4f0:	80 e8       	ldi	r24, 0x80	; 128
 4f2:	70 e0       	ldi	r23, 0x00	; 0
 4f4:	60 e0       	ldi	r22, 0x00	; 0
 4f6:	08 95       	ret

000004f8 <__fp_nan>:
 4f8:	9f ef       	ldi	r25, 0xFF	; 255
 4fa:	80 ec       	ldi	r24, 0xC0	; 192
 4fc:	08 95       	ret

000004fe <__fp_pscA>:
 4fe:	00 24       	eor	r0, r0
 500:	0a 94       	dec	r0
 502:	16 16       	cp	r1, r22
 504:	17 06       	cpc	r1, r23
 506:	18 06       	cpc	r1, r24
 508:	09 06       	cpc	r0, r25
 50a:	08 95       	ret

0000050c <__fp_pscB>:
 50c:	00 24       	eor	r0, r0
 50e:	0a 94       	dec	r0
 510:	12 16       	cp	r1, r18
 512:	13 06       	cpc	r1, r19
 514:	14 06       	cpc	r1, r20
 516:	05 06       	cpc	r0, r21
 518:	08 95       	ret

0000051a <__fp_round>:
 51a:	09 2e       	mov	r0, r25
 51c:	03 94       	inc	r0
 51e:	00 0c       	add	r0, r0
 520:	11 f4       	brne	.+4      	; 0x526 <__fp_round+0xc>
 522:	88 23       	and	r24, r24
 524:	52 f0       	brmi	.+20     	; 0x53a <__fp_round+0x20>
 526:	bb 0f       	add	r27, r27
 528:	40 f4       	brcc	.+16     	; 0x53a <__fp_round+0x20>
 52a:	bf 2b       	or	r27, r31
 52c:	11 f4       	brne	.+4      	; 0x532 <__fp_round+0x18>
 52e:	60 ff       	sbrs	r22, 0
 530:	04 c0       	rjmp	.+8      	; 0x53a <__fp_round+0x20>
 532:	6f 5f       	subi	r22, 0xFF	; 255
 534:	7f 4f       	sbci	r23, 0xFF	; 255
 536:	8f 4f       	sbci	r24, 0xFF	; 255
 538:	9f 4f       	sbci	r25, 0xFF	; 255
 53a:	08 95       	ret

0000053c <__fp_split3>:
 53c:	57 fd       	sbrc	r21, 7
 53e:	90 58       	subi	r25, 0x80	; 128
 540:	44 0f       	add	r20, r20
 542:	55 1f       	adc	r21, r21
 544:	59 f0       	breq	.+22     	; 0x55c <__fp_splitA+0x10>
 546:	5f 3f       	cpi	r21, 0xFF	; 255
 548:	71 f0       	breq	.+28     	; 0x566 <__fp_splitA+0x1a>
 54a:	47 95       	ror	r20

0000054c <__fp_splitA>:
 54c:	88 0f       	add	r24, r24
 54e:	97 fb       	bst	r25, 7
 550:	99 1f       	adc	r25, r25
 552:	61 f0       	breq	.+24     	; 0x56c <__fp_splitA+0x20>
 554:	9f 3f       	cpi	r25, 0xFF	; 255
 556:	79 f0       	breq	.+30     	; 0x576 <__fp_splitA+0x2a>
 558:	87 95       	ror	r24
 55a:	08 95       	ret
 55c:	12 16       	cp	r1, r18
 55e:	13 06       	cpc	r1, r19
 560:	14 06       	cpc	r1, r20
 562:	55 1f       	adc	r21, r21
 564:	f2 cf       	rjmp	.-28     	; 0x54a <__fp_split3+0xe>
 566:	46 95       	lsr	r20
 568:	f1 df       	rcall	.-30     	; 0x54c <__fp_splitA>
 56a:	08 c0       	rjmp	.+16     	; 0x57c <__fp_splitA+0x30>
 56c:	16 16       	cp	r1, r22
 56e:	17 06       	cpc	r1, r23
 570:	18 06       	cpc	r1, r24
 572:	99 1f       	adc	r25, r25
 574:	f1 cf       	rjmp	.-30     	; 0x558 <__fp_splitA+0xc>
 576:	86 95       	lsr	r24
 578:	71 05       	cpc	r23, r1
 57a:	61 05       	cpc	r22, r1
 57c:	08 94       	sec
 57e:	08 95       	ret

00000580 <__fp_zero>:
 580:	e8 94       	clt

00000582 <__fp_szero>:
 582:	bb 27       	eor	r27, r27
 584:	66 27       	eor	r22, r22
 586:	77 27       	eor	r23, r23
 588:	cb 01       	movw	r24, r22
 58a:	97 f9       	bld	r25, 7
 58c:	08 95       	ret

0000058e <__mulsf3>:
 58e:	0b d0       	rcall	.+22     	; 0x5a6 <__mulsf3x>
 590:	c4 cf       	rjmp	.-120    	; 0x51a <__fp_round>
 592:	b5 df       	rcall	.-150    	; 0x4fe <__fp_pscA>
 594:	28 f0       	brcs	.+10     	; 0x5a0 <__mulsf3+0x12>
 596:	ba df       	rcall	.-140    	; 0x50c <__fp_pscB>
 598:	18 f0       	brcs	.+6      	; 0x5a0 <__mulsf3+0x12>
 59a:	95 23       	and	r25, r21
 59c:	09 f0       	breq	.+2      	; 0x5a0 <__mulsf3+0x12>
 59e:	a6 cf       	rjmp	.-180    	; 0x4ec <__fp_inf>
 5a0:	ab cf       	rjmp	.-170    	; 0x4f8 <__fp_nan>
 5a2:	11 24       	eor	r1, r1
 5a4:	ee cf       	rjmp	.-36     	; 0x582 <__fp_szero>

000005a6 <__mulsf3x>:
 5a6:	ca df       	rcall	.-108    	; 0x53c <__fp_split3>
 5a8:	a0 f3       	brcs	.-24     	; 0x592 <__mulsf3+0x4>

000005aa <__mulsf3_pse>:
 5aa:	95 9f       	mul	r25, r21
 5ac:	d1 f3       	breq	.-12     	; 0x5a2 <__mulsf3+0x14>
 5ae:	95 0f       	add	r25, r21
 5b0:	50 e0       	ldi	r21, 0x00	; 0
 5b2:	55 1f       	adc	r21, r21
 5b4:	62 9f       	mul	r22, r18
 5b6:	f0 01       	movw	r30, r0
 5b8:	72 9f       	mul	r23, r18
 5ba:	bb 27       	eor	r27, r27
 5bc:	f0 0d       	add	r31, r0
 5be:	b1 1d       	adc	r27, r1
 5c0:	63 9f       	mul	r22, r19
 5c2:	aa 27       	eor	r26, r26
 5c4:	f0 0d       	add	r31, r0
 5c6:	b1 1d       	adc	r27, r1
 5c8:	aa 1f       	adc	r26, r26
 5ca:	64 9f       	mul	r22, r20
 5cc:	66 27       	eor	r22, r22
 5ce:	b0 0d       	add	r27, r0
 5d0:	a1 1d       	adc	r26, r1
 5d2:	66 1f       	adc	r22, r22
 5d4:	82 9f       	mul	r24, r18
 5d6:	22 27       	eor	r18, r18
 5d8:	b0 0d       	add	r27, r0
 5da:	a1 1d       	adc	r26, r1
 5dc:	62 1f       	adc	r22, r18
 5de:	73 9f       	mul	r23, r19
 5e0:	b0 0d       	add	r27, r0
 5e2:	a1 1d       	adc	r26, r1
 5e4:	62 1f       	adc	r22, r18
 5e6:	83 9f       	mul	r24, r19
 5e8:	a0 0d       	add	r26, r0
 5ea:	61 1d       	adc	r22, r1
 5ec:	22 1f       	adc	r18, r18
 5ee:	74 9f       	mul	r23, r20
 5f0:	33 27       	eor	r19, r19
 5f2:	a0 0d       	add	r26, r0
 5f4:	61 1d       	adc	r22, r1
 5f6:	23 1f       	adc	r18, r19
 5f8:	84 9f       	mul	r24, r20
 5fa:	60 0d       	add	r22, r0
 5fc:	21 1d       	adc	r18, r1
 5fe:	82 2f       	mov	r24, r18
 600:	76 2f       	mov	r23, r22
 602:	6a 2f       	mov	r22, r26
 604:	11 24       	eor	r1, r1
 606:	9f 57       	subi	r25, 0x7F	; 127
 608:	50 40       	sbci	r21, 0x00	; 0
 60a:	8a f0       	brmi	.+34     	; 0x62e <__mulsf3_pse+0x84>
 60c:	e1 f0       	breq	.+56     	; 0x646 <__mulsf3_pse+0x9c>
 60e:	88 23       	and	r24, r24
 610:	4a f0       	brmi	.+18     	; 0x624 <__mulsf3_pse+0x7a>
 612:	ee 0f       	add	r30, r30
 614:	ff 1f       	adc	r31, r31
 616:	bb 1f       	adc	r27, r27
 618:	66 1f       	adc	r22, r22
 61a:	77 1f       	adc	r23, r23
 61c:	88 1f       	adc	r24, r24
 61e:	91 50       	subi	r25, 0x01	; 1
 620:	50 40       	sbci	r21, 0x00	; 0
 622:	a9 f7       	brne	.-22     	; 0x60e <__mulsf3_pse+0x64>
 624:	9e 3f       	cpi	r25, 0xFE	; 254
 626:	51 05       	cpc	r21, r1
 628:	70 f0       	brcs	.+28     	; 0x646 <__mulsf3_pse+0x9c>
 62a:	60 cf       	rjmp	.-320    	; 0x4ec <__fp_inf>
 62c:	aa cf       	rjmp	.-172    	; 0x582 <__fp_szero>
 62e:	5f 3f       	cpi	r21, 0xFF	; 255
 630:	ec f3       	brlt	.-6      	; 0x62c <__mulsf3_pse+0x82>
 632:	98 3e       	cpi	r25, 0xE8	; 232
 634:	dc f3       	brlt	.-10     	; 0x62c <__mulsf3_pse+0x82>
 636:	86 95       	lsr	r24
 638:	77 95       	ror	r23
 63a:	67 95       	ror	r22
 63c:	b7 95       	ror	r27
 63e:	f7 95       	ror	r31
 640:	e7 95       	ror	r30
 642:	9f 5f       	subi	r25, 0xFF	; 255
 644:	c1 f7       	brne	.-16     	; 0x636 <__mulsf3_pse+0x8c>
 646:	fe 2b       	or	r31, r30
 648:	88 0f       	add	r24, r24
 64a:	91 1d       	adc	r25, r1
 64c:	96 95       	lsr	r25
 64e:	87 95       	ror	r24
 650:	97 f9       	bld	r25, 7
 652:	08 95       	ret

00000654 <sprintf>:
 654:	0f 93       	push	r16
 656:	1f 93       	push	r17
 658:	cf 93       	push	r28
 65a:	df 93       	push	r29
 65c:	cd b7       	in	r28, 0x3d	; 61
 65e:	de b7       	in	r29, 0x3e	; 62
 660:	2e 97       	sbiw	r28, 0x0e	; 14
 662:	0f b6       	in	r0, 0x3f	; 63
 664:	f8 94       	cli
 666:	de bf       	out	0x3e, r29	; 62
 668:	0f be       	out	0x3f, r0	; 63
 66a:	cd bf       	out	0x3d, r28	; 61
 66c:	0d 89       	ldd	r16, Y+21	; 0x15
 66e:	1e 89       	ldd	r17, Y+22	; 0x16
 670:	86 e0       	ldi	r24, 0x06	; 6
 672:	8c 83       	std	Y+4, r24	; 0x04
 674:	1a 83       	std	Y+2, r17	; 0x02
 676:	09 83       	std	Y+1, r16	; 0x01
 678:	8f ef       	ldi	r24, 0xFF	; 255
 67a:	9f e7       	ldi	r25, 0x7F	; 127
 67c:	9e 83       	std	Y+6, r25	; 0x06
 67e:	8d 83       	std	Y+5, r24	; 0x05
 680:	ae 01       	movw	r20, r28
 682:	47 5e       	subi	r20, 0xE7	; 231
 684:	5f 4f       	sbci	r21, 0xFF	; 255
 686:	6f 89       	ldd	r22, Y+23	; 0x17
 688:	78 8d       	ldd	r23, Y+24	; 0x18
 68a:	ce 01       	movw	r24, r28
 68c:	01 96       	adiw	r24, 0x01	; 1
 68e:	10 d0       	rcall	.+32     	; 0x6b0 <vfprintf>
 690:	ef 81       	ldd	r30, Y+7	; 0x07
 692:	f8 85       	ldd	r31, Y+8	; 0x08
 694:	e0 0f       	add	r30, r16
 696:	f1 1f       	adc	r31, r17
 698:	10 82       	st	Z, r1
 69a:	2e 96       	adiw	r28, 0x0e	; 14
 69c:	0f b6       	in	r0, 0x3f	; 63
 69e:	f8 94       	cli
 6a0:	de bf       	out	0x3e, r29	; 62
 6a2:	0f be       	out	0x3f, r0	; 63
 6a4:	cd bf       	out	0x3d, r28	; 61
 6a6:	df 91       	pop	r29
 6a8:	cf 91       	pop	r28
 6aa:	1f 91       	pop	r17
 6ac:	0f 91       	pop	r16
 6ae:	08 95       	ret

000006b0 <vfprintf>:
 6b0:	2f 92       	push	r2
 6b2:	3f 92       	push	r3
 6b4:	4f 92       	push	r4
 6b6:	5f 92       	push	r5
 6b8:	6f 92       	push	r6
 6ba:	7f 92       	push	r7
 6bc:	8f 92       	push	r8
 6be:	9f 92       	push	r9
 6c0:	af 92       	push	r10
 6c2:	bf 92       	push	r11
 6c4:	cf 92       	push	r12
 6c6:	df 92       	push	r13
 6c8:	ef 92       	push	r14
 6ca:	ff 92       	push	r15
 6cc:	0f 93       	push	r16
 6ce:	1f 93       	push	r17
 6d0:	cf 93       	push	r28
 6d2:	df 93       	push	r29
 6d4:	cd b7       	in	r28, 0x3d	; 61
 6d6:	de b7       	in	r29, 0x3e	; 62
 6d8:	2b 97       	sbiw	r28, 0x0b	; 11
 6da:	0f b6       	in	r0, 0x3f	; 63
 6dc:	f8 94       	cli
 6de:	de bf       	out	0x3e, r29	; 62
 6e0:	0f be       	out	0x3f, r0	; 63
 6e2:	cd bf       	out	0x3d, r28	; 61
 6e4:	6c 01       	movw	r12, r24
 6e6:	7b 01       	movw	r14, r22
 6e8:	8a 01       	movw	r16, r20
 6ea:	fc 01       	movw	r30, r24
 6ec:	17 82       	std	Z+7, r1	; 0x07
 6ee:	16 82       	std	Z+6, r1	; 0x06
 6f0:	83 81       	ldd	r24, Z+3	; 0x03
 6f2:	81 ff       	sbrs	r24, 1
 6f4:	bf c1       	rjmp	.+894    	; 0xa74 <vfprintf+0x3c4>
 6f6:	ce 01       	movw	r24, r28
 6f8:	01 96       	adiw	r24, 0x01	; 1
 6fa:	3c 01       	movw	r6, r24
 6fc:	f6 01       	movw	r30, r12
 6fe:	93 81       	ldd	r25, Z+3	; 0x03
 700:	f7 01       	movw	r30, r14
 702:	93 fd       	sbrc	r25, 3
 704:	85 91       	lpm	r24, Z+
 706:	93 ff       	sbrs	r25, 3
 708:	81 91       	ld	r24, Z+
 70a:	7f 01       	movw	r14, r30
 70c:	88 23       	and	r24, r24
 70e:	09 f4       	brne	.+2      	; 0x712 <vfprintf+0x62>
 710:	ad c1       	rjmp	.+858    	; 0xa6c <vfprintf+0x3bc>
 712:	85 32       	cpi	r24, 0x25	; 37
 714:	39 f4       	brne	.+14     	; 0x724 <vfprintf+0x74>
 716:	93 fd       	sbrc	r25, 3
 718:	85 91       	lpm	r24, Z+
 71a:	93 ff       	sbrs	r25, 3
 71c:	81 91       	ld	r24, Z+
 71e:	7f 01       	movw	r14, r30
 720:	85 32       	cpi	r24, 0x25	; 37
 722:	21 f4       	brne	.+8      	; 0x72c <vfprintf+0x7c>
 724:	b6 01       	movw	r22, r12
 726:	90 e0       	ldi	r25, 0x00	; 0
 728:	d6 d1       	rcall	.+940    	; 0xad6 <fputc>
 72a:	e8 cf       	rjmp	.-48     	; 0x6fc <vfprintf+0x4c>
 72c:	91 2c       	mov	r9, r1
 72e:	21 2c       	mov	r2, r1
 730:	31 2c       	mov	r3, r1
 732:	ff e1       	ldi	r31, 0x1F	; 31
 734:	f3 15       	cp	r31, r3
 736:	d8 f0       	brcs	.+54     	; 0x76e <vfprintf+0xbe>
 738:	8b 32       	cpi	r24, 0x2B	; 43
 73a:	79 f0       	breq	.+30     	; 0x75a <vfprintf+0xaa>
 73c:	38 f4       	brcc	.+14     	; 0x74c <vfprintf+0x9c>
 73e:	80 32       	cpi	r24, 0x20	; 32
 740:	79 f0       	breq	.+30     	; 0x760 <vfprintf+0xb0>
 742:	83 32       	cpi	r24, 0x23	; 35
 744:	a1 f4       	brne	.+40     	; 0x76e <vfprintf+0xbe>
 746:	23 2d       	mov	r18, r3
 748:	20 61       	ori	r18, 0x10	; 16
 74a:	1d c0       	rjmp	.+58     	; 0x786 <vfprintf+0xd6>
 74c:	8d 32       	cpi	r24, 0x2D	; 45
 74e:	61 f0       	breq	.+24     	; 0x768 <vfprintf+0xb8>
 750:	80 33       	cpi	r24, 0x30	; 48
 752:	69 f4       	brne	.+26     	; 0x76e <vfprintf+0xbe>
 754:	23 2d       	mov	r18, r3
 756:	21 60       	ori	r18, 0x01	; 1
 758:	16 c0       	rjmp	.+44     	; 0x786 <vfprintf+0xd6>
 75a:	83 2d       	mov	r24, r3
 75c:	82 60       	ori	r24, 0x02	; 2
 75e:	38 2e       	mov	r3, r24
 760:	e3 2d       	mov	r30, r3
 762:	e4 60       	ori	r30, 0x04	; 4
 764:	3e 2e       	mov	r3, r30
 766:	2a c0       	rjmp	.+84     	; 0x7bc <vfprintf+0x10c>
 768:	f3 2d       	mov	r31, r3
 76a:	f8 60       	ori	r31, 0x08	; 8
 76c:	1d c0       	rjmp	.+58     	; 0x7a8 <vfprintf+0xf8>
 76e:	37 fc       	sbrc	r3, 7
 770:	2d c0       	rjmp	.+90     	; 0x7cc <vfprintf+0x11c>
 772:	20 ed       	ldi	r18, 0xD0	; 208
 774:	28 0f       	add	r18, r24
 776:	2a 30       	cpi	r18, 0x0A	; 10
 778:	40 f0       	brcs	.+16     	; 0x78a <vfprintf+0xda>
 77a:	8e 32       	cpi	r24, 0x2E	; 46
 77c:	b9 f4       	brne	.+46     	; 0x7ac <vfprintf+0xfc>
 77e:	36 fc       	sbrc	r3, 6
 780:	75 c1       	rjmp	.+746    	; 0xa6c <vfprintf+0x3bc>
 782:	23 2d       	mov	r18, r3
 784:	20 64       	ori	r18, 0x40	; 64
 786:	32 2e       	mov	r3, r18
 788:	19 c0       	rjmp	.+50     	; 0x7bc <vfprintf+0x10c>
 78a:	36 fe       	sbrs	r3, 6
 78c:	06 c0       	rjmp	.+12     	; 0x79a <vfprintf+0xea>
 78e:	8a e0       	ldi	r24, 0x0A	; 10
 790:	98 9e       	mul	r9, r24
 792:	20 0d       	add	r18, r0
 794:	11 24       	eor	r1, r1
 796:	92 2e       	mov	r9, r18
 798:	11 c0       	rjmp	.+34     	; 0x7bc <vfprintf+0x10c>
 79a:	ea e0       	ldi	r30, 0x0A	; 10
 79c:	2e 9e       	mul	r2, r30
 79e:	20 0d       	add	r18, r0
 7a0:	11 24       	eor	r1, r1
 7a2:	22 2e       	mov	r2, r18
 7a4:	f3 2d       	mov	r31, r3
 7a6:	f0 62       	ori	r31, 0x20	; 32
 7a8:	3f 2e       	mov	r3, r31
 7aa:	08 c0       	rjmp	.+16     	; 0x7bc <vfprintf+0x10c>
 7ac:	8c 36       	cpi	r24, 0x6C	; 108
 7ae:	21 f4       	brne	.+8      	; 0x7b8 <vfprintf+0x108>
 7b0:	83 2d       	mov	r24, r3
 7b2:	80 68       	ori	r24, 0x80	; 128
 7b4:	38 2e       	mov	r3, r24
 7b6:	02 c0       	rjmp	.+4      	; 0x7bc <vfprintf+0x10c>
 7b8:	88 36       	cpi	r24, 0x68	; 104
 7ba:	41 f4       	brne	.+16     	; 0x7cc <vfprintf+0x11c>
 7bc:	f7 01       	movw	r30, r14
 7be:	93 fd       	sbrc	r25, 3
 7c0:	85 91       	lpm	r24, Z+
 7c2:	93 ff       	sbrs	r25, 3
 7c4:	81 91       	ld	r24, Z+
 7c6:	7f 01       	movw	r14, r30
 7c8:	81 11       	cpse	r24, r1
 7ca:	b3 cf       	rjmp	.-154    	; 0x732 <vfprintf+0x82>
 7cc:	98 2f       	mov	r25, r24
 7ce:	9f 7d       	andi	r25, 0xDF	; 223
 7d0:	95 54       	subi	r25, 0x45	; 69
 7d2:	93 30       	cpi	r25, 0x03	; 3
 7d4:	28 f4       	brcc	.+10     	; 0x7e0 <vfprintf+0x130>
 7d6:	0c 5f       	subi	r16, 0xFC	; 252
 7d8:	1f 4f       	sbci	r17, 0xFF	; 255
 7da:	9f e3       	ldi	r25, 0x3F	; 63
 7dc:	99 83       	std	Y+1, r25	; 0x01
 7de:	0d c0       	rjmp	.+26     	; 0x7fa <vfprintf+0x14a>
 7e0:	83 36       	cpi	r24, 0x63	; 99
 7e2:	31 f0       	breq	.+12     	; 0x7f0 <vfprintf+0x140>
 7e4:	83 37       	cpi	r24, 0x73	; 115
 7e6:	71 f0       	breq	.+28     	; 0x804 <vfprintf+0x154>
 7e8:	83 35       	cpi	r24, 0x53	; 83
 7ea:	09 f0       	breq	.+2      	; 0x7ee <vfprintf+0x13e>
 7ec:	55 c0       	rjmp	.+170    	; 0x898 <vfprintf+0x1e8>
 7ee:	20 c0       	rjmp	.+64     	; 0x830 <vfprintf+0x180>
 7f0:	f8 01       	movw	r30, r16
 7f2:	80 81       	ld	r24, Z
 7f4:	89 83       	std	Y+1, r24	; 0x01
 7f6:	0e 5f       	subi	r16, 0xFE	; 254
 7f8:	1f 4f       	sbci	r17, 0xFF	; 255
 7fa:	88 24       	eor	r8, r8
 7fc:	83 94       	inc	r8
 7fe:	91 2c       	mov	r9, r1
 800:	53 01       	movw	r10, r6
 802:	12 c0       	rjmp	.+36     	; 0x828 <vfprintf+0x178>
 804:	28 01       	movw	r4, r16
 806:	f2 e0       	ldi	r31, 0x02	; 2
 808:	4f 0e       	add	r4, r31
 80a:	51 1c       	adc	r5, r1
 80c:	f8 01       	movw	r30, r16
 80e:	a0 80       	ld	r10, Z
 810:	b1 80       	ldd	r11, Z+1	; 0x01
 812:	36 fe       	sbrs	r3, 6
 814:	03 c0       	rjmp	.+6      	; 0x81c <vfprintf+0x16c>
 816:	69 2d       	mov	r22, r9
 818:	70 e0       	ldi	r23, 0x00	; 0
 81a:	02 c0       	rjmp	.+4      	; 0x820 <vfprintf+0x170>
 81c:	6f ef       	ldi	r22, 0xFF	; 255
 81e:	7f ef       	ldi	r23, 0xFF	; 255
 820:	c5 01       	movw	r24, r10
 822:	4e d1       	rcall	.+668    	; 0xac0 <strnlen>
 824:	4c 01       	movw	r8, r24
 826:	82 01       	movw	r16, r4
 828:	f3 2d       	mov	r31, r3
 82a:	ff 77       	andi	r31, 0x7F	; 127
 82c:	3f 2e       	mov	r3, r31
 82e:	15 c0       	rjmp	.+42     	; 0x85a <vfprintf+0x1aa>
 830:	28 01       	movw	r4, r16
 832:	22 e0       	ldi	r18, 0x02	; 2
 834:	42 0e       	add	r4, r18
 836:	51 1c       	adc	r5, r1
 838:	f8 01       	movw	r30, r16
 83a:	a0 80       	ld	r10, Z
 83c:	b1 80       	ldd	r11, Z+1	; 0x01
 83e:	36 fe       	sbrs	r3, 6
 840:	03 c0       	rjmp	.+6      	; 0x848 <vfprintf+0x198>
 842:	69 2d       	mov	r22, r9
 844:	70 e0       	ldi	r23, 0x00	; 0
 846:	02 c0       	rjmp	.+4      	; 0x84c <vfprintf+0x19c>
 848:	6f ef       	ldi	r22, 0xFF	; 255
 84a:	7f ef       	ldi	r23, 0xFF	; 255
 84c:	c5 01       	movw	r24, r10
 84e:	2d d1       	rcall	.+602    	; 0xaaa <strnlen_P>
 850:	4c 01       	movw	r8, r24
 852:	f3 2d       	mov	r31, r3
 854:	f0 68       	ori	r31, 0x80	; 128
 856:	3f 2e       	mov	r3, r31
 858:	82 01       	movw	r16, r4
 85a:	33 fc       	sbrc	r3, 3
 85c:	19 c0       	rjmp	.+50     	; 0x890 <vfprintf+0x1e0>
 85e:	82 2d       	mov	r24, r2
 860:	90 e0       	ldi	r25, 0x00	; 0
 862:	88 16       	cp	r8, r24
 864:	99 06       	cpc	r9, r25
 866:	a0 f4       	brcc	.+40     	; 0x890 <vfprintf+0x1e0>
 868:	b6 01       	movw	r22, r12
 86a:	80 e2       	ldi	r24, 0x20	; 32
 86c:	90 e0       	ldi	r25, 0x00	; 0
 86e:	33 d1       	rcall	.+614    	; 0xad6 <fputc>
 870:	2a 94       	dec	r2
 872:	f5 cf       	rjmp	.-22     	; 0x85e <vfprintf+0x1ae>
 874:	f5 01       	movw	r30, r10
 876:	37 fc       	sbrc	r3, 7
 878:	85 91       	lpm	r24, Z+
 87a:	37 fe       	sbrs	r3, 7
 87c:	81 91       	ld	r24, Z+
 87e:	5f 01       	movw	r10, r30
 880:	b6 01       	movw	r22, r12
 882:	90 e0       	ldi	r25, 0x00	; 0
 884:	28 d1       	rcall	.+592    	; 0xad6 <fputc>
 886:	21 10       	cpse	r2, r1
 888:	2a 94       	dec	r2
 88a:	21 e0       	ldi	r18, 0x01	; 1
 88c:	82 1a       	sub	r8, r18
 88e:	91 08       	sbc	r9, r1
 890:	81 14       	cp	r8, r1
 892:	91 04       	cpc	r9, r1
 894:	79 f7       	brne	.-34     	; 0x874 <vfprintf+0x1c4>
 896:	e1 c0       	rjmp	.+450    	; 0xa5a <vfprintf+0x3aa>
 898:	84 36       	cpi	r24, 0x64	; 100
 89a:	11 f0       	breq	.+4      	; 0x8a0 <vfprintf+0x1f0>
 89c:	89 36       	cpi	r24, 0x69	; 105
 89e:	39 f5       	brne	.+78     	; 0x8ee <vfprintf+0x23e>
 8a0:	f8 01       	movw	r30, r16
 8a2:	37 fe       	sbrs	r3, 7
 8a4:	07 c0       	rjmp	.+14     	; 0x8b4 <vfprintf+0x204>
 8a6:	60 81       	ld	r22, Z
 8a8:	71 81       	ldd	r23, Z+1	; 0x01
 8aa:	82 81       	ldd	r24, Z+2	; 0x02
 8ac:	93 81       	ldd	r25, Z+3	; 0x03
 8ae:	0c 5f       	subi	r16, 0xFC	; 252
 8b0:	1f 4f       	sbci	r17, 0xFF	; 255
 8b2:	08 c0       	rjmp	.+16     	; 0x8c4 <vfprintf+0x214>
 8b4:	60 81       	ld	r22, Z
 8b6:	71 81       	ldd	r23, Z+1	; 0x01
 8b8:	07 2e       	mov	r0, r23
 8ba:	00 0c       	add	r0, r0
 8bc:	88 0b       	sbc	r24, r24
 8be:	99 0b       	sbc	r25, r25
 8c0:	0e 5f       	subi	r16, 0xFE	; 254
 8c2:	1f 4f       	sbci	r17, 0xFF	; 255
 8c4:	f3 2d       	mov	r31, r3
 8c6:	ff 76       	andi	r31, 0x6F	; 111
 8c8:	3f 2e       	mov	r3, r31
 8ca:	97 ff       	sbrs	r25, 7
 8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <vfprintf+0x230>
 8ce:	90 95       	com	r25
 8d0:	80 95       	com	r24
 8d2:	70 95       	com	r23
 8d4:	61 95       	neg	r22
 8d6:	7f 4f       	sbci	r23, 0xFF	; 255
 8d8:	8f 4f       	sbci	r24, 0xFF	; 255
 8da:	9f 4f       	sbci	r25, 0xFF	; 255
 8dc:	f0 68       	ori	r31, 0x80	; 128
 8de:	3f 2e       	mov	r3, r31
 8e0:	2a e0       	ldi	r18, 0x0A	; 10
 8e2:	30 e0       	ldi	r19, 0x00	; 0
 8e4:	a3 01       	movw	r20, r6
 8e6:	33 d1       	rcall	.+614    	; 0xb4e <__ultoa_invert>
 8e8:	88 2e       	mov	r8, r24
 8ea:	86 18       	sub	r8, r6
 8ec:	44 c0       	rjmp	.+136    	; 0x976 <vfprintf+0x2c6>
 8ee:	85 37       	cpi	r24, 0x75	; 117
 8f0:	31 f4       	brne	.+12     	; 0x8fe <vfprintf+0x24e>
 8f2:	23 2d       	mov	r18, r3
 8f4:	2f 7e       	andi	r18, 0xEF	; 239
 8f6:	b2 2e       	mov	r11, r18
 8f8:	2a e0       	ldi	r18, 0x0A	; 10
 8fa:	30 e0       	ldi	r19, 0x00	; 0
 8fc:	25 c0       	rjmp	.+74     	; 0x948 <vfprintf+0x298>
 8fe:	93 2d       	mov	r25, r3
 900:	99 7f       	andi	r25, 0xF9	; 249
 902:	b9 2e       	mov	r11, r25
 904:	8f 36       	cpi	r24, 0x6F	; 111
 906:	c1 f0       	breq	.+48     	; 0x938 <vfprintf+0x288>
 908:	18 f4       	brcc	.+6      	; 0x910 <vfprintf+0x260>
 90a:	88 35       	cpi	r24, 0x58	; 88
 90c:	79 f0       	breq	.+30     	; 0x92c <vfprintf+0x27c>
 90e:	ae c0       	rjmp	.+348    	; 0xa6c <vfprintf+0x3bc>
 910:	80 37       	cpi	r24, 0x70	; 112
 912:	19 f0       	breq	.+6      	; 0x91a <vfprintf+0x26a>
 914:	88 37       	cpi	r24, 0x78	; 120
 916:	21 f0       	breq	.+8      	; 0x920 <vfprintf+0x270>
 918:	a9 c0       	rjmp	.+338    	; 0xa6c <vfprintf+0x3bc>
 91a:	e9 2f       	mov	r30, r25
 91c:	e0 61       	ori	r30, 0x10	; 16
 91e:	be 2e       	mov	r11, r30
 920:	b4 fe       	sbrs	r11, 4
 922:	0d c0       	rjmp	.+26     	; 0x93e <vfprintf+0x28e>
 924:	fb 2d       	mov	r31, r11
 926:	f4 60       	ori	r31, 0x04	; 4
 928:	bf 2e       	mov	r11, r31
 92a:	09 c0       	rjmp	.+18     	; 0x93e <vfprintf+0x28e>
 92c:	34 fe       	sbrs	r3, 4
 92e:	0a c0       	rjmp	.+20     	; 0x944 <vfprintf+0x294>
 930:	29 2f       	mov	r18, r25
 932:	26 60       	ori	r18, 0x06	; 6
 934:	b2 2e       	mov	r11, r18
 936:	06 c0       	rjmp	.+12     	; 0x944 <vfprintf+0x294>
 938:	28 e0       	ldi	r18, 0x08	; 8
 93a:	30 e0       	ldi	r19, 0x00	; 0
 93c:	05 c0       	rjmp	.+10     	; 0x948 <vfprintf+0x298>
 93e:	20 e1       	ldi	r18, 0x10	; 16
 940:	30 e0       	ldi	r19, 0x00	; 0
 942:	02 c0       	rjmp	.+4      	; 0x948 <vfprintf+0x298>
 944:	20 e1       	ldi	r18, 0x10	; 16
 946:	32 e0       	ldi	r19, 0x02	; 2
 948:	f8 01       	movw	r30, r16
 94a:	b7 fe       	sbrs	r11, 7
 94c:	07 c0       	rjmp	.+14     	; 0x95c <vfprintf+0x2ac>
 94e:	60 81       	ld	r22, Z
 950:	71 81       	ldd	r23, Z+1	; 0x01
 952:	82 81       	ldd	r24, Z+2	; 0x02
 954:	93 81       	ldd	r25, Z+3	; 0x03
 956:	0c 5f       	subi	r16, 0xFC	; 252
 958:	1f 4f       	sbci	r17, 0xFF	; 255
 95a:	06 c0       	rjmp	.+12     	; 0x968 <vfprintf+0x2b8>
 95c:	60 81       	ld	r22, Z
 95e:	71 81       	ldd	r23, Z+1	; 0x01
 960:	80 e0       	ldi	r24, 0x00	; 0
 962:	90 e0       	ldi	r25, 0x00	; 0
 964:	0e 5f       	subi	r16, 0xFE	; 254
 966:	1f 4f       	sbci	r17, 0xFF	; 255
 968:	a3 01       	movw	r20, r6
 96a:	f1 d0       	rcall	.+482    	; 0xb4e <__ultoa_invert>
 96c:	88 2e       	mov	r8, r24
 96e:	86 18       	sub	r8, r6
 970:	fb 2d       	mov	r31, r11
 972:	ff 77       	andi	r31, 0x7F	; 127
 974:	3f 2e       	mov	r3, r31
 976:	36 fe       	sbrs	r3, 6
 978:	0d c0       	rjmp	.+26     	; 0x994 <vfprintf+0x2e4>
 97a:	23 2d       	mov	r18, r3
 97c:	2e 7f       	andi	r18, 0xFE	; 254
 97e:	a2 2e       	mov	r10, r18
 980:	89 14       	cp	r8, r9
 982:	58 f4       	brcc	.+22     	; 0x99a <vfprintf+0x2ea>
 984:	34 fe       	sbrs	r3, 4
 986:	0b c0       	rjmp	.+22     	; 0x99e <vfprintf+0x2ee>
 988:	32 fc       	sbrc	r3, 2
 98a:	09 c0       	rjmp	.+18     	; 0x99e <vfprintf+0x2ee>
 98c:	83 2d       	mov	r24, r3
 98e:	8e 7e       	andi	r24, 0xEE	; 238
 990:	a8 2e       	mov	r10, r24
 992:	05 c0       	rjmp	.+10     	; 0x99e <vfprintf+0x2ee>
 994:	b8 2c       	mov	r11, r8
 996:	a3 2c       	mov	r10, r3
 998:	03 c0       	rjmp	.+6      	; 0x9a0 <vfprintf+0x2f0>
 99a:	b8 2c       	mov	r11, r8
 99c:	01 c0       	rjmp	.+2      	; 0x9a0 <vfprintf+0x2f0>
 99e:	b9 2c       	mov	r11, r9
 9a0:	a4 fe       	sbrs	r10, 4
 9a2:	0f c0       	rjmp	.+30     	; 0x9c2 <vfprintf+0x312>
 9a4:	fe 01       	movw	r30, r28
 9a6:	e8 0d       	add	r30, r8
 9a8:	f1 1d       	adc	r31, r1
 9aa:	80 81       	ld	r24, Z
 9ac:	80 33       	cpi	r24, 0x30	; 48
 9ae:	21 f4       	brne	.+8      	; 0x9b8 <vfprintf+0x308>
 9b0:	9a 2d       	mov	r25, r10
 9b2:	99 7e       	andi	r25, 0xE9	; 233
 9b4:	a9 2e       	mov	r10, r25
 9b6:	09 c0       	rjmp	.+18     	; 0x9ca <vfprintf+0x31a>
 9b8:	a2 fe       	sbrs	r10, 2
 9ba:	06 c0       	rjmp	.+12     	; 0x9c8 <vfprintf+0x318>
 9bc:	b3 94       	inc	r11
 9be:	b3 94       	inc	r11
 9c0:	04 c0       	rjmp	.+8      	; 0x9ca <vfprintf+0x31a>
 9c2:	8a 2d       	mov	r24, r10
 9c4:	86 78       	andi	r24, 0x86	; 134
 9c6:	09 f0       	breq	.+2      	; 0x9ca <vfprintf+0x31a>
 9c8:	b3 94       	inc	r11
 9ca:	a3 fc       	sbrc	r10, 3
 9cc:	10 c0       	rjmp	.+32     	; 0x9ee <vfprintf+0x33e>
 9ce:	a0 fe       	sbrs	r10, 0
 9d0:	06 c0       	rjmp	.+12     	; 0x9de <vfprintf+0x32e>
 9d2:	b2 14       	cp	r11, r2
 9d4:	80 f4       	brcc	.+32     	; 0x9f6 <vfprintf+0x346>
 9d6:	28 0c       	add	r2, r8
 9d8:	92 2c       	mov	r9, r2
 9da:	9b 18       	sub	r9, r11
 9dc:	0d c0       	rjmp	.+26     	; 0x9f8 <vfprintf+0x348>
 9de:	b2 14       	cp	r11, r2
 9e0:	58 f4       	brcc	.+22     	; 0x9f8 <vfprintf+0x348>
 9e2:	b6 01       	movw	r22, r12
 9e4:	80 e2       	ldi	r24, 0x20	; 32
 9e6:	90 e0       	ldi	r25, 0x00	; 0
 9e8:	76 d0       	rcall	.+236    	; 0xad6 <fputc>
 9ea:	b3 94       	inc	r11
 9ec:	f8 cf       	rjmp	.-16     	; 0x9de <vfprintf+0x32e>
 9ee:	b2 14       	cp	r11, r2
 9f0:	18 f4       	brcc	.+6      	; 0x9f8 <vfprintf+0x348>
 9f2:	2b 18       	sub	r2, r11
 9f4:	02 c0       	rjmp	.+4      	; 0x9fa <vfprintf+0x34a>
 9f6:	98 2c       	mov	r9, r8
 9f8:	21 2c       	mov	r2, r1
 9fa:	a4 fe       	sbrs	r10, 4
 9fc:	0f c0       	rjmp	.+30     	; 0xa1c <vfprintf+0x36c>
 9fe:	b6 01       	movw	r22, r12
 a00:	80 e3       	ldi	r24, 0x30	; 48
 a02:	90 e0       	ldi	r25, 0x00	; 0
 a04:	68 d0       	rcall	.+208    	; 0xad6 <fputc>
 a06:	a2 fe       	sbrs	r10, 2
 a08:	16 c0       	rjmp	.+44     	; 0xa36 <vfprintf+0x386>
 a0a:	a1 fc       	sbrc	r10, 1
 a0c:	03 c0       	rjmp	.+6      	; 0xa14 <vfprintf+0x364>
 a0e:	88 e7       	ldi	r24, 0x78	; 120
 a10:	90 e0       	ldi	r25, 0x00	; 0
 a12:	02 c0       	rjmp	.+4      	; 0xa18 <vfprintf+0x368>
 a14:	88 e5       	ldi	r24, 0x58	; 88
 a16:	90 e0       	ldi	r25, 0x00	; 0
 a18:	b6 01       	movw	r22, r12
 a1a:	0c c0       	rjmp	.+24     	; 0xa34 <vfprintf+0x384>
 a1c:	8a 2d       	mov	r24, r10
 a1e:	86 78       	andi	r24, 0x86	; 134
 a20:	51 f0       	breq	.+20     	; 0xa36 <vfprintf+0x386>
 a22:	a1 fe       	sbrs	r10, 1
 a24:	02 c0       	rjmp	.+4      	; 0xa2a <vfprintf+0x37a>
 a26:	8b e2       	ldi	r24, 0x2B	; 43
 a28:	01 c0       	rjmp	.+2      	; 0xa2c <vfprintf+0x37c>
 a2a:	80 e2       	ldi	r24, 0x20	; 32
 a2c:	a7 fc       	sbrc	r10, 7
 a2e:	8d e2       	ldi	r24, 0x2D	; 45
 a30:	b6 01       	movw	r22, r12
 a32:	90 e0       	ldi	r25, 0x00	; 0
 a34:	50 d0       	rcall	.+160    	; 0xad6 <fputc>
 a36:	89 14       	cp	r8, r9
 a38:	30 f4       	brcc	.+12     	; 0xa46 <vfprintf+0x396>
 a3a:	b6 01       	movw	r22, r12
 a3c:	80 e3       	ldi	r24, 0x30	; 48
 a3e:	90 e0       	ldi	r25, 0x00	; 0
 a40:	4a d0       	rcall	.+148    	; 0xad6 <fputc>
 a42:	9a 94       	dec	r9
 a44:	f8 cf       	rjmp	.-16     	; 0xa36 <vfprintf+0x386>
 a46:	8a 94       	dec	r8
 a48:	f3 01       	movw	r30, r6
 a4a:	e8 0d       	add	r30, r8
 a4c:	f1 1d       	adc	r31, r1
 a4e:	80 81       	ld	r24, Z
 a50:	b6 01       	movw	r22, r12
 a52:	90 e0       	ldi	r25, 0x00	; 0
 a54:	40 d0       	rcall	.+128    	; 0xad6 <fputc>
 a56:	81 10       	cpse	r8, r1
 a58:	f6 cf       	rjmp	.-20     	; 0xa46 <vfprintf+0x396>
 a5a:	22 20       	and	r2, r2
 a5c:	09 f4       	brne	.+2      	; 0xa60 <vfprintf+0x3b0>
 a5e:	4e ce       	rjmp	.-868    	; 0x6fc <vfprintf+0x4c>
 a60:	b6 01       	movw	r22, r12
 a62:	80 e2       	ldi	r24, 0x20	; 32
 a64:	90 e0       	ldi	r25, 0x00	; 0
 a66:	37 d0       	rcall	.+110    	; 0xad6 <fputc>
 a68:	2a 94       	dec	r2
 a6a:	f7 cf       	rjmp	.-18     	; 0xa5a <vfprintf+0x3aa>
 a6c:	f6 01       	movw	r30, r12
 a6e:	86 81       	ldd	r24, Z+6	; 0x06
 a70:	97 81       	ldd	r25, Z+7	; 0x07
 a72:	02 c0       	rjmp	.+4      	; 0xa78 <vfprintf+0x3c8>
 a74:	8f ef       	ldi	r24, 0xFF	; 255
 a76:	9f ef       	ldi	r25, 0xFF	; 255
 a78:	2b 96       	adiw	r28, 0x0b	; 11
 a7a:	0f b6       	in	r0, 0x3f	; 63
 a7c:	f8 94       	cli
 a7e:	de bf       	out	0x3e, r29	; 62
 a80:	0f be       	out	0x3f, r0	; 63
 a82:	cd bf       	out	0x3d, r28	; 61
 a84:	df 91       	pop	r29
 a86:	cf 91       	pop	r28
 a88:	1f 91       	pop	r17
 a8a:	0f 91       	pop	r16
 a8c:	ff 90       	pop	r15
 a8e:	ef 90       	pop	r14
 a90:	df 90       	pop	r13
 a92:	cf 90       	pop	r12
 a94:	bf 90       	pop	r11
 a96:	af 90       	pop	r10
 a98:	9f 90       	pop	r9
 a9a:	8f 90       	pop	r8
 a9c:	7f 90       	pop	r7
 a9e:	6f 90       	pop	r6
 aa0:	5f 90       	pop	r5
 aa2:	4f 90       	pop	r4
 aa4:	3f 90       	pop	r3
 aa6:	2f 90       	pop	r2
 aa8:	08 95       	ret

00000aaa <strnlen_P>:
 aaa:	fc 01       	movw	r30, r24
 aac:	05 90       	lpm	r0, Z+
 aae:	61 50       	subi	r22, 0x01	; 1
 ab0:	70 40       	sbci	r23, 0x00	; 0
 ab2:	01 10       	cpse	r0, r1
 ab4:	d8 f7       	brcc	.-10     	; 0xaac <strnlen_P+0x2>
 ab6:	80 95       	com	r24
 ab8:	90 95       	com	r25
 aba:	8e 0f       	add	r24, r30
 abc:	9f 1f       	adc	r25, r31
 abe:	08 95       	ret

00000ac0 <strnlen>:
 ac0:	fc 01       	movw	r30, r24
 ac2:	61 50       	subi	r22, 0x01	; 1
 ac4:	70 40       	sbci	r23, 0x00	; 0
 ac6:	01 90       	ld	r0, Z+
 ac8:	01 10       	cpse	r0, r1
 aca:	d8 f7       	brcc	.-10     	; 0xac2 <strnlen+0x2>
 acc:	80 95       	com	r24
 ace:	90 95       	com	r25
 ad0:	8e 0f       	add	r24, r30
 ad2:	9f 1f       	adc	r25, r31
 ad4:	08 95       	ret

00000ad6 <fputc>:
 ad6:	0f 93       	push	r16
 ad8:	1f 93       	push	r17
 ada:	cf 93       	push	r28
 adc:	df 93       	push	r29
 ade:	fb 01       	movw	r30, r22
 ae0:	23 81       	ldd	r18, Z+3	; 0x03
 ae2:	21 fd       	sbrc	r18, 1
 ae4:	03 c0       	rjmp	.+6      	; 0xaec <fputc+0x16>
 ae6:	8f ef       	ldi	r24, 0xFF	; 255
 ae8:	9f ef       	ldi	r25, 0xFF	; 255
 aea:	2c c0       	rjmp	.+88     	; 0xb44 <fputc+0x6e>
 aec:	22 ff       	sbrs	r18, 2
 aee:	16 c0       	rjmp	.+44     	; 0xb1c <fputc+0x46>
 af0:	46 81       	ldd	r20, Z+6	; 0x06
 af2:	57 81       	ldd	r21, Z+7	; 0x07
 af4:	24 81       	ldd	r18, Z+4	; 0x04
 af6:	35 81       	ldd	r19, Z+5	; 0x05
 af8:	42 17       	cp	r20, r18
 afa:	53 07       	cpc	r21, r19
 afc:	44 f4       	brge	.+16     	; 0xb0e <fputc+0x38>
 afe:	a0 81       	ld	r26, Z
 b00:	b1 81       	ldd	r27, Z+1	; 0x01
 b02:	9d 01       	movw	r18, r26
 b04:	2f 5f       	subi	r18, 0xFF	; 255
 b06:	3f 4f       	sbci	r19, 0xFF	; 255
 b08:	31 83       	std	Z+1, r19	; 0x01
 b0a:	20 83       	st	Z, r18
 b0c:	8c 93       	st	X, r24
 b0e:	26 81       	ldd	r18, Z+6	; 0x06
 b10:	37 81       	ldd	r19, Z+7	; 0x07
 b12:	2f 5f       	subi	r18, 0xFF	; 255
 b14:	3f 4f       	sbci	r19, 0xFF	; 255
 b16:	37 83       	std	Z+7, r19	; 0x07
 b18:	26 83       	std	Z+6, r18	; 0x06
 b1a:	14 c0       	rjmp	.+40     	; 0xb44 <fputc+0x6e>
 b1c:	8b 01       	movw	r16, r22
 b1e:	ec 01       	movw	r28, r24
 b20:	fb 01       	movw	r30, r22
 b22:	00 84       	ldd	r0, Z+8	; 0x08
 b24:	f1 85       	ldd	r31, Z+9	; 0x09
 b26:	e0 2d       	mov	r30, r0
 b28:	09 95       	icall
 b2a:	89 2b       	or	r24, r25
 b2c:	e1 f6       	brne	.-72     	; 0xae6 <fputc+0x10>
 b2e:	d8 01       	movw	r26, r16
 b30:	16 96       	adiw	r26, 0x06	; 6
 b32:	8d 91       	ld	r24, X+
 b34:	9c 91       	ld	r25, X
 b36:	17 97       	sbiw	r26, 0x07	; 7
 b38:	01 96       	adiw	r24, 0x01	; 1
 b3a:	17 96       	adiw	r26, 0x07	; 7
 b3c:	9c 93       	st	X, r25
 b3e:	8e 93       	st	-X, r24
 b40:	16 97       	sbiw	r26, 0x06	; 6
 b42:	ce 01       	movw	r24, r28
 b44:	df 91       	pop	r29
 b46:	cf 91       	pop	r28
 b48:	1f 91       	pop	r17
 b4a:	0f 91       	pop	r16
 b4c:	08 95       	ret

00000b4e <__ultoa_invert>:
 b4e:	fa 01       	movw	r30, r20
 b50:	aa 27       	eor	r26, r26
 b52:	28 30       	cpi	r18, 0x08	; 8
 b54:	51 f1       	breq	.+84     	; 0xbaa <__ultoa_invert+0x5c>
 b56:	20 31       	cpi	r18, 0x10	; 16
 b58:	81 f1       	breq	.+96     	; 0xbba <__ultoa_invert+0x6c>
 b5a:	e8 94       	clt
 b5c:	6f 93       	push	r22
 b5e:	6e 7f       	andi	r22, 0xFE	; 254
 b60:	6e 5f       	subi	r22, 0xFE	; 254
 b62:	7f 4f       	sbci	r23, 0xFF	; 255
 b64:	8f 4f       	sbci	r24, 0xFF	; 255
 b66:	9f 4f       	sbci	r25, 0xFF	; 255
 b68:	af 4f       	sbci	r26, 0xFF	; 255
 b6a:	b1 e0       	ldi	r27, 0x01	; 1
 b6c:	3e d0       	rcall	.+124    	; 0xbea <__ultoa_invert+0x9c>
 b6e:	b4 e0       	ldi	r27, 0x04	; 4
 b70:	3c d0       	rcall	.+120    	; 0xbea <__ultoa_invert+0x9c>
 b72:	67 0f       	add	r22, r23
 b74:	78 1f       	adc	r23, r24
 b76:	89 1f       	adc	r24, r25
 b78:	9a 1f       	adc	r25, r26
 b7a:	a1 1d       	adc	r26, r1
 b7c:	68 0f       	add	r22, r24
 b7e:	79 1f       	adc	r23, r25
 b80:	8a 1f       	adc	r24, r26
 b82:	91 1d       	adc	r25, r1
 b84:	a1 1d       	adc	r26, r1
 b86:	6a 0f       	add	r22, r26
 b88:	71 1d       	adc	r23, r1
 b8a:	81 1d       	adc	r24, r1
 b8c:	91 1d       	adc	r25, r1
 b8e:	a1 1d       	adc	r26, r1
 b90:	20 d0       	rcall	.+64     	; 0xbd2 <__ultoa_invert+0x84>
 b92:	09 f4       	brne	.+2      	; 0xb96 <__ultoa_invert+0x48>
 b94:	68 94       	set
 b96:	3f 91       	pop	r19
 b98:	2a e0       	ldi	r18, 0x0A	; 10
 b9a:	26 9f       	mul	r18, r22
 b9c:	11 24       	eor	r1, r1
 b9e:	30 19       	sub	r19, r0
 ba0:	30 5d       	subi	r19, 0xD0	; 208
 ba2:	31 93       	st	Z+, r19
 ba4:	de f6       	brtc	.-74     	; 0xb5c <__ultoa_invert+0xe>
 ba6:	cf 01       	movw	r24, r30
 ba8:	08 95       	ret
 baa:	46 2f       	mov	r20, r22
 bac:	47 70       	andi	r20, 0x07	; 7
 bae:	40 5d       	subi	r20, 0xD0	; 208
 bb0:	41 93       	st	Z+, r20
 bb2:	b3 e0       	ldi	r27, 0x03	; 3
 bb4:	0f d0       	rcall	.+30     	; 0xbd4 <__ultoa_invert+0x86>
 bb6:	c9 f7       	brne	.-14     	; 0xbaa <__ultoa_invert+0x5c>
 bb8:	f6 cf       	rjmp	.-20     	; 0xba6 <__ultoa_invert+0x58>
 bba:	46 2f       	mov	r20, r22
 bbc:	4f 70       	andi	r20, 0x0F	; 15
 bbe:	40 5d       	subi	r20, 0xD0	; 208
 bc0:	4a 33       	cpi	r20, 0x3A	; 58
 bc2:	18 f0       	brcs	.+6      	; 0xbca <__ultoa_invert+0x7c>
 bc4:	49 5d       	subi	r20, 0xD9	; 217
 bc6:	31 fd       	sbrc	r19, 1
 bc8:	40 52       	subi	r20, 0x20	; 32
 bca:	41 93       	st	Z+, r20
 bcc:	02 d0       	rcall	.+4      	; 0xbd2 <__ultoa_invert+0x84>
 bce:	a9 f7       	brne	.-22     	; 0xbba <__ultoa_invert+0x6c>
 bd0:	ea cf       	rjmp	.-44     	; 0xba6 <__ultoa_invert+0x58>
 bd2:	b4 e0       	ldi	r27, 0x04	; 4
 bd4:	a6 95       	lsr	r26
 bd6:	97 95       	ror	r25
 bd8:	87 95       	ror	r24
 bda:	77 95       	ror	r23
 bdc:	67 95       	ror	r22
 bde:	ba 95       	dec	r27
 be0:	c9 f7       	brne	.-14     	; 0xbd4 <__ultoa_invert+0x86>
 be2:	00 97       	sbiw	r24, 0x00	; 0
 be4:	61 05       	cpc	r22, r1
 be6:	71 05       	cpc	r23, r1
 be8:	08 95       	ret
 bea:	9b 01       	movw	r18, r22
 bec:	ac 01       	movw	r20, r24
 bee:	0a 2e       	mov	r0, r26
 bf0:	06 94       	lsr	r0
 bf2:	57 95       	ror	r21
 bf4:	47 95       	ror	r20
 bf6:	37 95       	ror	r19
 bf8:	27 95       	ror	r18
 bfa:	ba 95       	dec	r27
 bfc:	c9 f7       	brne	.-14     	; 0xbf0 <__ultoa_invert+0xa2>
 bfe:	62 0f       	add	r22, r18
 c00:	73 1f       	adc	r23, r19
 c02:	84 1f       	adc	r24, r20
 c04:	95 1f       	adc	r25, r21
 c06:	a0 1d       	adc	r26, r0
 c08:	08 95       	ret

00000c0a <_exit>:
 c0a:	f8 94       	cli

00000c0c <__stop_program>:
 c0c:	ff cf       	rjmp	.-2      	; 0xc0c <__stop_program>
